# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B-tSm6tc9v9WlV4PvhDi71pheoZR80LQ
"""

def verificar_par_impar(numero):
    match numero % 2:
        case 0:
            print(f"El número {numero} es par.")
        case 1:
            print(f"El número {numero} es impar.")
        case _:
            print("Error: Entrada no válida.")

# Ejemplo de uso
numero = int(input("Introduce un número: "))
verificar_par_impar(numero)

def es_bisiesto(año):
    match True:
        case (año % 400 == 0):
            print(f"El año {año} es bisiesto.")
        case (año % 100 == 0):
            print(f"El año {año} no es bisiesto.")
        case (año % 4 == 0):
            print(f"El año {año} es bisiesto.")
        case _:
            print(f"El año {año} no es bisiesto.")

# Ejemplo de uso
año = int(input("Introduce un año: "))
es_bisiesto(año)

def verificar_prioridad(nombre, edad):
    match edad >= 70:
        case True:
            print(f"{nombre}, usted pertenece a la tercera edad y se le da prioridad en la fila.")
        case False:
            print(f"{nombre}, usted no pertenece a la tercera edad.")
        case _:
            print("Error al determinar la prioridad.")

# Ejemplo de uso
nombre = input("Introduce tu nombre: ")
edad = int(input("Introduce tu edad: "))
verificar_prioridad(nombre, edad)

def mayor_de_tres(num1, num2, num3):
    match True:
        case (num1 >= num2 and num1 >= num3):
            print(f"El número mayor es {num1}.")
        case (num2 >= num1 and num2 >= num3):
            print(f"El número mayor es {num2}.")
        case (num3 >= num1 and num3 >= num2):
            print(f"El número mayor es {num3}.")
        case _:
            print("Error al comparar los números.")

# Ejemplo de uso
num1 = int(input("Introduce el primer número: "))
num2 = int(input("Introduce el segundo número: "))
num3 = int(input("Introduce el tercer número: "))
mayor_de_tres(num1, num2, num3)

def tipo_triangulo(lado1, lado2, lado3):
    match (lado1 == lado2, lado2 == lado3, lado1 == lado3):
        case (True, True, True):
            print("El triángulo es equilátero.")
        case (True, True, False):
            print("El triángulo es isósceles.")
        case (False, False, False):
            print("El triángulo es escaleno.")
        case _:
            print("Error: Los lados no forman un triángulo válido.")

# Ejemplo de uso
lado1 = float(input("Introduce el primer lado: "))
lado2 = float(input("Introduce el segundo lado: "))
lado3 = float(input("Introduce el tercer lado: "))
tipo_triangulo(lado1, lado2, lado3)

"""# Sección nueva"""